#ifndef COMPUTERSERVICE_H
#define COMPUTERSERVICE_H
#include "repositories/sql.h"

/**
 * @brief The ComputerService acts as a middle layer between the UI and Data layers, also handles sorting
 */
class ComputerService
{
public:
    ComputerService();

    /**
     * @brief getAllComputers fetches Computers from the ComputerRepository and sorts them
     * @param orderBy Which column the Computers should be sorted on
     * @param orderAscending Should the list be sorted in ascending order?
     * @return a vector containing all Computers in the repository
     */
    std::vector<Computer> getAllComputers(std::string orderBy, bool orderAscending);

    /**
     * @brief searchForComputers fetches all Computers from file and filters them on searchTerm
     * @param searchTerm Contains the input that the user wishes to filter on
     * @return a vector of Computers filtered by searchTerm
     */
    std::vector<Computer> searchForComputers(std::string searchTerm);

    /**
     * @brief addComputer saves a Computer model to a file
     * @param Computer The model to save
     * @return true if it was a success, false if it was a failure
     */
    bool addComputer(Computer Computer);
private:
    ComputerRepository ComputerRepo;
    Sql ComputerSql;
};

#endif // COMPUTERSERVICE_H
